---
// import { FeatherIcon } from 'astro-feather';
const { name, href, iconName = "circle" } = Astro.props;
const isActive = Astro.url.pathname === href;
---

<a
    aria-label={name}
    class:list={[{ active: isActive }]}
    href={href}
>
    <s-icon
        class="symbol rounded-full flex relative justify-center items-center"
    >
        <s-ripple class="absolute rounded-full"></s-ripple>
        <i data-feather={iconName}></i>
    </s-icon>
    <div class="label text-sm font-medium">{name}</div>
</a>
<script>
    import "sober/icon";
    import "sober/ripple";
</script>

<style>
    a {
        display: block;
        text-decoration: none;
        color: var(--s-color-on-surface-variant);
        border: none;
        outline: none;
        box-shadow: none;
        margin: -2px auto 14px;
        padding: 4px;
        z-index: 1;
    }
    .label {
        letter-spacing: 0.1px;
        line-height: 16px;
        margin-bottom: 4px;
        text-align: center;
        transition: font-weight.2s linear;
    }
    .active .label,
    a:hover .label {
        color: var(--s-color-on-secondary-container);
        /* font-weight: bold; */
    }
    .symbol {
        width: 52px;
        height: 28px;
        margin-right: auto;
        margin-bottom: 4px;
        margin-left: auto;
        line-height: 1;
        padding: 4px;
    }
    .symbol::before {
        content: "";
        position: absolute;
        opacity: 0;
        transform: scaleX(0.32);
        transition:
            opacity 0.2s ease-in;
        width: 100%;
        height: 100%;
        background-color: var(--s-color-primary-container);
        border-radius: 100px;
        z-index: -1;
    }
    .active .symbol::before {
        background-color: var(--s-color-secondary-container);
        opacity: 1;
        transform: scaleX(1);
    }
    a:hover .symbol {
        background-color: rgba(var(--s-color-surface-variant-rgb), 0.5);
    }
    a:hover .icon {
        stroke-width: 2.5;
    }
    .icon {
        /* transition:
            stroke-width,
            0.2s linear; */
    }
</style>
