---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
type Props = CollectionEntry<"blog">;
import MainPageLayout from "@layouts/responsive-layout/MainPageLayout.astro";
import { SIT_NAVIGATIONS } from "../consts";
interface Post {
  slug: string;
  title: string;
  description: string;
  pubDate: Date;
  updatedDate: Date | undefined;
  score: number
}
const posts = (await getCollection("blog")).map((post) => ({
  slug: post.collection + "/" + post.slug,
  title: post.data.title,
  description: post.data.description,
  pubDate: post.data.pubDate,
  updatedDate: post.data.updatedDate,
  score: post.data.score,   
  cover: post.data.cover
}));

const pageNavigations = [
  {
    category: "排序",
    navigations: [
      {
        name: "最近",
        href: "latest",
      },
      {
        name: "最近更新",
        href: "lastest_updated",
      },
      {
        name: "最推荐",
        href: "remocommeded",
      },
    ],
  },
];

export const getStaticPaths = (() => {
  return [
    { params: { sorted: "latest" } },
    { params: { sorted: "lastest_updated" } },
    { params: { sorted: "remocommeded" } },
  ];
}) satisfies GetStaticPaths;

const { sorted } = Astro.params;
const latestSorter = (left: Post, right: Post)=>{
  return left.pubDate.valueOf() > right.pubDate.valueOf() ? -1 : 1
}
const lastestUpdatedSorter = (left: Post, right: Post)=>{
  if(left.updatedDate === undefined ) return 1;
  else if(right.updatedDate === undefined ) return -1;
  return left.updatedDate?.valueOf() > right.updatedDate?.valueOf() ? -1 : 1
}
const remocommededSorter = (left: Post, right: Post)=>{
  return left.score > right.score ? -1 : 1
}
const sortedPost = posts.sort(sorted === "latest" ? latestSorter : sorted === "lastest_updated" ? lastestUpdatedSorter : remocommededSorter);
---

<MainPageLayout
  navigations={{
    page: pageNavigations,
    site: SIT_NAVIGATIONS,
    extraNasigation: SIT_NAVIGATIONS.slice(0, 2),
  }}
  posts={posts}
/>

<style>
  body {
    background-color: var(--s-color-surface);
  }
</style>
